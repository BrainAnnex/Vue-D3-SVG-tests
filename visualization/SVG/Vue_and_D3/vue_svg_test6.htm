<!-- Using Vue to insert the entire SVG code, generated by a Vue method
    that uses my svg-plot.js library to generate the SVG code (from Vue data) -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Vue with VSG test 6</title>

    <!-- JavaScript -->
    <script src="Vue2/vue2.js"></script>    <!-- Vue.js (version 2) -->
</head>

<body>


<div id="vue-root">   <!-- Vue root element -->
    <div v-html="create_plot()"></div>
</div>	<!--  ~~~~~~~~~~~~~~~~~~~~~  END of Vue root element  ~~~~~~~~~~~~~~~~~~~~~  -->




<!--
    Vue components (and other JS).  This must appear AFTER the Vue-containing elements
  -->
<script src="../SVG_plot/svg-plot.js"></script>


<script>
// Instantiation must come after the component definition
new Vue({
    el: '#vue-root',

    delimiters: ['[[', ']]'] ,  // Changing delimiters: requesting double SQUARE brackets, to avoid interfering with Flask

    data: {
        all_points: [
                        [30, 10],
                        [80, 30],
                        [120, 65],
                        [42, 77]
                    ]
    },


    // ---------------------  METHODS  ----------------------

    methods:  {
        create_plot()
        //
        {
            let svg_code = new SVGplot(200, 400);

            let old_pnt = null;
            for (let i=0; i < this.all_points.length; i++)  {
                let pnt = this.all_points[i];
                svg_code = svg_code.add_point(pnt[0], pnt[1], 3, 'orange');

                if (i != 0)
                    svg_code = svg_code.add_line(old_pnt[0], old_pnt[1], pnt[0], pnt[1]);

                old_pnt = pnt;
            }

            svg_code = svg_code
                .add_line(0, 0, 100, 100)
                .terminate_plot();

            console.log(svg_code);

            return svg_code;
        }

    } // METHODS

});
</script>


</body>
</html>